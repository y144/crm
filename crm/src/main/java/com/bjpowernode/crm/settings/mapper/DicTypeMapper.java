package com.bjpowernode.crm.settings.mapper;

import com.bjpowernode.crm.settings.domain.DicType;

import java.util.List;

public interface DicTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    int deleteByPrimaryKey(String code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    int insert(DicType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    int insertSelective(DicType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    DicType selectByPrimaryKey(String code);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    int updateByPrimaryKeySelective(DicType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_dic_type
     *
     * @mbggenerated Mon May 18 16:01:30 CST 2020
     */
    int updateByPrimaryKey(DicType record);

    /**
     * 查询所有的数据字典类型
     * @return
     *//*
    List<DicType> selectAllDicTypes();

    *//**
     * 根据code查询数据字典类型
     * @param code
     * @return
     *//*
    DicType selectDicTypeByCode(String code);

    *//**
     * 保存创建的数据字典类型
     * @param dicType
     * @return
     *//*
    int insertDicType(DicType dicType);

    *//**
     * 根据codes删除数据字典类型
     * @param codes
     * @return
     *//*
    int deleteDicTypeByCodes(String[] codes);

    *//**
     * 保存修改的数据字典类型
     * @param
     * @return
     *//*
    int updateDicType(DicType dicType);*/

    //查询全部的字典类型
    List<DicType> selectAllDicType();

    //根据主键查询字典类型
    DicType selectDicTypeById(String code);

    //新增保存字典类型
    int saveDicType(DicType dicType);

    //批量删除字典类型
    int deleteDicTypeBatch(String[] codes);

    //更新字典类型
    int updateDicType(DicType dicType);
}

